{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["import {renderForPromise, runTemplateJS} from 'core/templates';\nimport {requestForAssistant} from './request';\n\nexport const init = (instanceid) => {\n    // eslint-disable-next-line no-console\n    console.log(\"âš¡ INIT WORK\");\n    const parent = document.querySelector(`[class=\"footer\"][data-instance-id=\"${instanceid}\"]`);\n    const submitButton = parent.querySelector('[data-action=\"submit\"]');\n    const textarea = parent.querySelector('[data-region=\"input\"]');\n    const chat = document.querySelector(`[data-role=\"chat\"][data-instance-id=\"${instanceid}\"]`);\n    let session = 15;\n\n    // eslint-disable-next-line no-console\n    console.log({submitButton, textarea});\n    submitButton.addEventListener('click', () => {\n        if (textarea) {\n            const text = textarea.value.trim();\n            if (text !== '') {\n                const date = new Date();\n                const time = Math.floor(date.getTime() / 1000);\n                addMessage(text, 'user', date, chat);\n                textarea.value = '';\n                const promise = requestForAssistant(text, time, session);\n                promise.done(function(response) {\n                    if (response.status == \"success\") {\n                        // eslint-disable-next-line no-console\n                        console.log(\"answer:\", response.answer);\n                        addMessage(response.answer, 'assistant', new Date(response.answertime * 1000), chat);\n                    } else {\n                        // eslint-disable-next-line no-console\n                        console.log(\"error:\", response.message);\n                    }\n                }).fail(function(fail) {\n                    // eslint-disable-next-line no-console\n                    console.log(\"error\", fail);\n                });\n            } else {\n                // Message for user: The message shouldn't be empty\n            }\n        } else {\n            // eslint-disable-next-line no-console\n            console.error('Textarea not found!');\n        }\n    });\n};\n/**\n * Add message\n * @param {message} text\n * @param {*user or assistant} role\n * @param {Data} time\n * @param {a message is added here} chat\n */\nasync function addMessage(text, role, time, chat) {\n    const {html, js} = await renderForPromise('block_aiassistant/messages', {\n            role: role,\n            text: text,\n            time: time.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit', hourCycle: 'h24'})\n        });\n    chat.insertAdjacentHTML('beforeend', html);\n    chat.scrollTop = chat.scrollHeight;\n    if (js) {\n        runTemplateJS(js);\n    }\n}"],"names":["async","addMessage","text","role","time","chat","html","js","renderForPromise","toLocaleTimeString","hour","minute","hourCycle","insertAdjacentHTML","scrollTop","scrollHeight","runTemplateJS","_exports","init","instanceid","console","log","parent","document","querySelector","submitButton","textarea","addEventListener","value","trim","date","Date","Math","floor","getTime","requestForAssistant","done","response","status","answer","answertime","message","fail","error"],"mappings":"8LAoDAA,eAAeC,WAAWC,KAAMC,KAAMC,KAAMC,MACxC,MAAMC,KAACA,KAAIC,GAAEA,UAAY,EAAAC,WAAgBA,kBAAC,6BAA8B,CAChEL,KAAMA,KACND,KAAMA,KACNE,KAAMA,KAAKK,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAQ,UAAWC,UAAW,UAE1FP,KAAKQ,mBAAmB,YAAaP,MACrCD,KAAKS,UAAYT,KAAKU,aAClBR,KACA,EAAAS,WAAAA,eAAcT,GAEtB,CAnBEU,SAAAC,KAzCmBC,aAEjBC,QAAQC,IAAI,eACZ,MAAMC,OAASC,SAASC,cAAc,sCAAsCL,gBACtEM,aAAeH,OAAOE,cAAc,0BACpCE,SAAWJ,OAAOE,cAAc,yBAChCnB,KAAOkB,SAASC,cAAc,wCAAwCL,gBAI5EC,QAAQC,IAAI,CAACI,0BAAcC,oBAC3BD,aAAaE,iBAAiB,SAAS,KACnC,GAAID,SAAU,CACV,MAAMxB,KAAOwB,SAASE,MAAMC,OAC5B,GAAa,KAAT3B,KAAa,CACb,MAAM4B,KAAO,IAAIC,KACX3B,KAAO4B,KAAKC,MAAMH,KAAKI,UAAY,KACzCjC,WAAWC,KAAM,OAAQ4B,KAAMzB,MAC/BqB,SAASE,MAAQ,IACD,EAAAO,SAAmBA,qBAACjC,KAAME,KAZxC,IAaMgC,MAAK,SAASC,UACK,WAAnBA,SAASC,QAETlB,QAAQC,IAAI,UAAWgB,SAASE,QAChCtC,WAAWoC,SAASE,OAAQ,YAAa,IAAIR,KAA2B,IAAtBM,SAASG,YAAoBnC,OAG/Ee,QAAQC,IAAI,SAAUgB,SAASI,QAEvC,IAAGC,MAAK,SAASA,MAEbtB,QAAQC,IAAI,QAASqB,KACzB,GACJ,CAGJ,MAEItB,QAAQuB,MAAM,sBAClB,GACF,CAoBL"}