{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["import {renderForPromise, runTemplateJS} from 'core/templates';\nimport {requestForAssistant} from './request';\nimport {getSession} from './session';\nimport {loadHistory} from './history';\n\nexport const init = (instanceid) => {\n    // eslint-disable-next-line no-console\n    console.log(\"âš¡ INIT WORK\");\n    const parent = document.querySelector(`[class=\"footer\"][data-instance-id=\"${instanceid}\"]`);\n    const submitButton = parent.querySelector('[data-action=\"submit\"]');\n    const textarea = parent.querySelector('[data-region=\"input\"]');\n    const chat = document.querySelector(`[data-role=\"chat\"][data-instance-id=\"${instanceid}\"]`);\n    const newChatButton = document.querySelector(`[data-action=\"new-chat\"][data-instance-id=\"${instanceid}\"]`);\n\n    let session = null;\n    const promise = getSession();\n    promise.done(function(sessionInfo) {\n        session = sessionInfo.sessionid;\n        // eslint-disable-next-line no-console\n        console.log(\"currentSession:\", sessionInfo);\n        if (sessionInfo.isNew == false) {\n            const promiseHistory = loadHistory(sessionInfo.sessionid);\n            promiseHistory.done(function(history) {\n                addDialogue(history, chat);\n            }).fail(function(error) {\n                // eslint-disable-next-line no-console\n                console.log(\"error\", error);\n            });\n        }\n    }).fail(function(error) {\n        // eslint-disable-next-line no-console\n        console.log(\"error\", error);\n    });\n\n    submitButton.addEventListener('click', () => {\n        if (textarea) {\n            const text = textarea.value.trim();\n            if (text !== '') {\n                const date = new Date();\n                const time = Math.floor(date.getTime() / 1000);\n                addMessage('user', text, date, chat);\n                textarea.value = '';\n                const promise = requestForAssistant(text, time, session);\n                promise.done(function(response) {\n                    if (response.status == \"success\") {\n                        // eslint-disable-next-line no-console\n                        console.log(\"answer:\", response.answer);\n                        addMessage('assistant', response.answer, new Date(response.answertime * 1000), chat);\n                    } else {\n                        // eslint-disable-next-line no-console\n                        console.log(\"error:\", response.message);\n                    }\n                }).fail(function(fail) {\n                    // eslint-disable-next-line no-console\n                    console.log(\"error\", fail);\n                });\n            } else {\n                // Message for user: The message shouldn't be empty\n            }\n        } else {\n            // eslint-disable-next-line no-console\n            console.error('Textarea not found!');\n        }\n    });\n\n    newChatButton.addEventListener('click', () => {\n        chat.textContent = '';\n        const promise = getSession(true);\n        promise.done(function(sessionInfo) {\n            session = sessionInfo.sessionid;\n            // eslint-disable-next-line no-console\n            console.log(\"currentSession:\", sessionInfo);\n        }).fail(function(error) {\n            // eslint-disable-next-line no-console\n            console.log(\"error\", error);\n        });\n    });\n};\n/**\n * Add message\n * @param {'user' | 'assistant'} role\n * @param {string} text\n * @param {Data} time\n * @param {*} chat a message is added here\n */\nasync function addMessage(role, text, time, chat) {\n    const {html, js} = await renderForPromise('block_aiassistant/messages', {\n            role: role,\n            text: text,\n            time: time.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit', hourCycle: 'h24'})\n        });\n    chat.insertAdjacentHTML('beforeend', html);\n    chat.scrollTop = chat.scrollHeight;\n    if (js) {\n        runTemplateJS(js);\n    }\n}\n\n/**\n * Add message\n * @param {Array.<[string,string,number]>} messages\n * @param {*} chat a message is added here\n */\nasync function addDialogue(messages, chat) {\n    for (const message of messages) {\n        addMessage(message.role, message.text, new Date(message.time * 1000), chat);\n    }\n}"],"names":["async","addMessage","role","text","time","chat","html","js","renderForPromise","toLocaleTimeString","hour","minute","hourCycle","insertAdjacentHTML","scrollTop","scrollHeight","runTemplateJS","_exports","init","instanceid","console","log","parent","document","querySelector","submitButton","textarea","newChatButton","session","getSession","done","sessionInfo","sessionid","isNew","loadHistory","history","messages","message","Date","addDialogue","fail","error","addEventListener","value","trim","date","Math","floor","getTime","requestForAssistant","response","status","answer","answertime","textContent"],"mappings":"wOAqFAA,eAAeC,WAAWC,KAAMC,KAAMC,KAAMC,MACxC,MAAMC,KAACA,KAAIC,GAAEA,UAAY,EAAAC,WAAgBA,kBAAC,6BAA8B,CAChEN,KAAMA,KACNC,KAAMA,KACNC,KAAMA,KAAKK,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAQ,UAAWC,UAAW,UAE1FP,KAAKQ,mBAAmB,YAAaP,MACrCD,KAAKS,UAAYT,KAAKU,aAClBR,KACA,EAAAS,WAAAA,eAAcT,GAEtB,CAnBEU,SAAAC,KAxEmBC,aAEjBC,QAAQC,IAAI,eACZ,MAAMC,OAASC,SAASC,cAAc,sCAAsCL,gBACtEM,aAAeH,OAAOE,cAAc,0BACpCE,SAAWJ,OAAOE,cAAc,yBAChCnB,KAAOkB,SAASC,cAAc,wCAAwCL,gBACtEQ,cAAgBJ,SAASC,cAAc,8CAA8CL,gBAE3F,IAAIS,QAAU,MACE,EAAAC,SAAAA,cACRC,MAAK,SAASC,aAIlB,GAHAH,QAAUG,YAAYC,UAEtBZ,QAAQC,IAAI,kBAAmBU,aACN,GAArBA,YAAYE,MAAgB,EACL,EAAAC,SAAAA,aAAYH,YAAYC,WAChCF,MAAK,SAASK,UAiFzCnC,eAA2BoC,SAAU/B,MACjC,IAAK,MAAMgC,WAAWD,SAClBnC,WAAWoC,QAAQnC,KAAMmC,QAAQlC,KAAM,IAAImC,KAAoB,IAAfD,QAAQjC,MAAcC,KAE9E,CApFgBkC,CAAYJ,QAAS9B,KACzB,IAAGmC,MAAK,SAASC,OAEbrB,QAAQC,IAAI,QAASoB,MACzB,GACJ,CACJ,IAAGD,MAAK,SAASC,OAEbrB,QAAQC,IAAI,QAASoB,MACzB,IAEAhB,aAAaiB,iBAAiB,SAAS,KACnC,GAAIhB,SAAU,CACV,MAAMvB,KAAOuB,SAASiB,MAAMC,OAC5B,GAAa,KAATzC,KAAa,CACb,MAAM0C,KAAO,IAAIP,KACXlC,KAAO0C,KAAKC,MAAMF,KAAKG,UAAY,KACzC/C,WAAW,OAAQE,KAAM0C,KAAMxC,MAC/BqB,SAASiB,MAAQ,IACD,EAAAM,SAAmBA,qBAAC9C,KAAMC,KAAMwB,SACxCE,MAAK,SAASoB,UACK,WAAnBA,SAASC,QAET/B,QAAQC,IAAI,UAAW6B,SAASE,QAChCnD,WAAW,YAAaiD,SAASE,OAAQ,IAAId,KAA2B,IAAtBY,SAASG,YAAoBhD,OAG/Ee,QAAQC,IAAI,SAAU6B,SAASb,QAEvC,IAAGG,MAAK,SAASA,MAEbpB,QAAQC,IAAI,QAASmB,KACzB,GACJ,CAGJ,MAEIpB,QAAQqB,MAAM,sBAClB,IAGJd,cAAce,iBAAiB,SAAS,KACpCrC,KAAKiD,YAAc,IACH,EAAAzB,SAAUA,aAAC,GACnBC,MAAK,SAASC,aAClBH,QAAUG,YAAYC,UAEtBZ,QAAQC,IAAI,kBAAmBU,YACnC,IAAGS,MAAK,SAASC,OAEbrB,QAAQC,IAAI,QAASoB,MACzB,GAAE,GACJ,CA+BL"}